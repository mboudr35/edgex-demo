name: edgex-openvino-object-detection
base: core20
version: '0.1'
summary: Single-line elevator pitch for your amazing snap
description: |
  This is my-snap's description. You have a paragraph or two to tell the
  most important story about your snap. Keep it under 100 words though,
  we live in tweetspace and your description wants to look good in the snap
  store.

grade: devel
confinement: devmode

parts:
  ovbase:
    plugin: nil
    build-packages:
      - build-essential
      - cmake
      - curl
      - git
      - libavcodec-dev
      - libavformat-dev
      - libavresample-dev
      - libavutil-dev
      - libboost-filesystem-dev
      - libboost-program-options-dev
      - libboost-thread-dev
      - libgstreamer1.0-dev
      - libgstreamer-plugins-base1.0-dev
      - libgtk-3-dev
      - libjpeg-dev
      - libmfx-dev
      - libopenblas-dev
      - libopenexr-dev
      - libpng-dev
      - libssl-dev
      - libswscale-dev
      - libtbb2
      - libtiff5-dev
      - libva-dev
      - libwebp-dev
      - libx11-dev
      - libxxf86vm-dev
      - ninja-build
      - python3.8-venv
      - python3-dev
      - python3-numpy
      - python3-pip
      - python3-setuptools
    stage-packages:
      - freeglut3
      - gstreamer1.0-plugins-bad
      - gstreamer1.0-plugins-base
      - gstreamer1.0-plugins-good
      - gstreamer1.0-plugins-ugly
      - gstreamer1.0-tools
      - jq
      - libavcodec58
      - libavformat58
      - libavresample4
      - libavutil56
      - libgl1
      - libgstreamer1.0-0
      - libgtk-3-0
      - libice6
      - libjson-c4
      - libmfx1
      - libpython3.8
      - libquadmath0
      - libsm6
      - libswscale5
      - libtinfo5
      - libusb-1.0-0
      - x264
    override-pull: |
      cd $SNAPCRAFT_PART_SRC
      curl https://storage.openvinotoolkit.org/repositories/openvino/packages/2022.3/linux/l_openvino_toolkit_ubuntu20_2022.3.0.9052.9752fafe8eb_x86_64.tgz | tar xz
      git clone --recursive -b 4.6.0 --depth=1 https://github.com/opencv/opencv.git
      git clone --recursive -b releases/2022/3 https://github.com/openvinotoolkit/open_model_zoo.git
    override-build: |
      python3 -m venv $SNAPCRAFT_PART_INSTALL
      source $SNAPCRAFT_PART_INSTALL/bin/activate
      python3 -m pip install -U pip
      cp -r $SNAPCRAFT_PART_SRC/*openvino* $SNAPCRAFT_PART_INSTALL/openvino
      export INTEL_OPENVINO_DIR=$SNAPCRAFT_PART_INSTALL/openvino
      export PYTHON_VER="3.8"
      export ZSH_VERSION=""
      export PYTHONPATH=$INTEL_OPENVINO_DIR/python/python3.8
      source $INTEL_OPENVINO_DIR/setupvars.sh -pyver $PYTHON_VER
      mkdir -p $SNAPCRAFT_PART_BUILD/opencv
      cd $SNAPCRAFT_PART_BUILD/opencv
      cmake -G Ninja \
        -D BUILD_INFO_SKIP_EXTRA_MODULES=ON \
        -D BUILD_EXAMPLES=OFF \
        -D BUILD_JASPER=OFF \
        -D BUILD_JAVA=OFF \
        -D BUILD_JPEG=ON \
        -D BUILD_APPS_LIST=version \
        -D BUILD_opencv_apps=ON \
        -D BUILD_opencv_java=OFF \
        -D BUILD_OPENEXR=OFF \
        -D BUILD_PNG=ON \
        -D BUILD_TBB=OFF \
        -D BUILD_WEBP=OFF \
        -D BUILD_ZLIB=ON \
        -D WITH_1394=OFF \
        -D WITH_CUDA=OFF \
        -D WITH_EIGEN=OFF \
        -D WITH_GPHOTO2=OFF \
        -D WITH_GSTREAMER=ON \
        -D OPENCV_GAPI_GSTREAMER=OFF \
        -D WITH_GTK_2_X=OFF \
        -D WITH_IPP=ON \
        -D WITH_JASPER=OFF \
        -D WITH_LAPACK=OFF \
        -D WITH_MATLAB=OFF \
        -D WITH_MFX=ON \
        -D WITH_OPENCLAMDBLAS=OFF \
        -D WITH_OPENCLAMDFFT=OFF \
        -D WITH_OPENEXR=OFF \
        -D WITH_OPENJPEG=OFF \
        -D WITH_QUIRC=OFF \
        -D WITH_TBB=OFF \
        -D WITH_TIFF=OFF \
        -D WITH_VTK=OFF \
        -D WITH_WEBP=OFF \
        -D CMAKE_USE_RELATIVE_PATHS=ON \
        -D CMAKE_SKIP_INSTALL_RPATH=ON \
        -D ENABLE_BUILD_HARDENING=ON \
        -D ENABLE_CONFIG_VERIFICATION=ON \
        -D ENABLE_PRECOMPILED_HEADERS=OFF \
        -D ENABLE_CXX11=ON \
        -D INSTALL_PDB=ON \
        -D INSTALL_TESTS=ON \
        -D INSTALL_C_EXAMPLES=ON \
        -D INSTALL_PYTHON_EXAMPLES=OFF \
        -D CMAKE_INSTALL_PREFIX=install \
        -D OPENCV_SKIP_PKGCONFIG_GENERATION=ON \
        -D OPENCV_SKIP_PYTHON_LOADER=OFF \
        -D OPENCV_SKIP_CMAKE_ROOT_CONFIG=ON \
        -D OPENCV_GENERATE_SETUPVARS=OFF \
        -D OPENCV_BIN_INSTALL_PATH=$SNAPCRAFT_PART_INSTALL/opencv/bin \
        -D OPENCV_INCLUDE_INSTALL_PATH=$SNAPCRAFT_PART_INSTALL/opencv/include \
        -D OPENCV_LIB_INSTALL_PATH=$SNAPCRAFT_PART_INSTALL/opencv/lib \
        -D OPENCV_CONFIG_INSTALL_PATH=$SNAPCRAFT_PART_INSTALL/opencv/cmake \
        -D OPENCV_3P_LIB_INSTALL_PATH=$SNAPCRAFT_PART_INSTALL/opencv/3rdparty \
        -D OPENCV_DOC_INSTALL_PATH=$SNAPCRAFT_PART_INSTALL/opencv/doc \
        -D OPENCV_OTHER_INSTALL_PATH=$SNAPCRAFT_PART_INSTALL/opencv/etc \
        -D OPENCV_LICENSES_INSTALL_PATH=$SNAPCRAFT_PART_INSTALL/opencv/etc/licenses \
        -D OPENCV_INSTALL_FFMPEG_DOWNLOAD_SCRIPT=ON \
        -D BUILD_opencv_world=OFF \
        -D BUILD_opencv_python2=OFF \
        -D BUILD_opencv_python3=ON \
        -D PYTHON3_PACKAGES_PATH=install/python/python3 \
        -D PYTHON3_LIMITED_API=ON \
        -D HIGHGUI_PLUGIN_LIST=all \
        -D OPENCV_PYTHON_INSTALL_PATH=$SNAPCRAFT_PART_INSTALL/opencv/python \
        -D CPU_BASELINE=SSE4_2 \
        -D OPENCV_IPP_GAUSSIAN_BLUR=ON \
        -D WITH_INF_ENGINE=ON \
        -D InferenceEngine_DIR="${INTEL_OPENVINO_DIR}"/runtime/cmake/ \
        -D ngraph_DIR="${INTEL_OPENVINO_DIR}"/runtime/cmake/ \
        -D INF_ENGINE_RELEASE=2022010000 \
        -D VIDEOIO_PLUGIN_LIST=ffmpeg,gstreamer,mfx \
        -D CMAKE_EXE_LINKER_FLAGS=-Wl,--allow-shlib-undefined \
        -D CMAKE_BUILD_TYPE=Release $SNAPCRAFT_PART_SRC/opencv
      ninja && cmake --install $SNAPCRAFT_PART_BUILD/opencv
      mkdir -p $SNAPCRAFT_PART_INSTALL/openvino/extras
      cp -r $SNAPCRAFT_PART_INSTALL/opencv $SNAPCRAFT_PART_INSTALL/openvino/extras/opencv
      echo "export OpenCV_DIR=\$SNAP/openvino/extras/opencv/cmake" | tee -a "${SNAPCRAFT_PART_INSTALL}/openvino/extras/opencv/setupvars.sh"
      echo "export LD_LIBRARY_PATH=\$SNAP/openvino/extras/opencv/lib:\$LD_LIBRARY_PATH" | tee -a "${SNAPCRAFT_PART_INSTALL}/openvino/extras/opencv/setupvars.sh"
      python3 -m pip install openvino==2022.3.0 openvino_dev[caffe,kaldi,mxnet,onnx,pytorch,tensorflow2]==2022.3.0
      sed -i '/opencv-python/d' $SNAPCRAFT_PART_SRC/open_model_zoo/demos/common/python/requirements.txt
      python3 -m pip install $SNAPCRAFT_PART_SRC/open_model_zoo/demos/common/python/
      python3 -c "from openvino.model_zoo import model_api"
      cd $SNAPCRAFT_PART_INSTALL
      $SNAPCRAFT_PART_INSTALL/bin/omz_downloader --name yolo-v2-tiny-ava-0001
  demo:
    plugin: dump
    source: demo
    after: [ovbase]

